log10(median(y))
median(z)
3>=2
x<- 3>=2
x = 3>=2
x = (3>=2)
x = (1>=2)
a=c(1,2)
b=c(1,0)
x = (a>=b)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
require(rCharts)
install.packages("rCharts")
library(devtools)
install.packages("devtools")
library("devtools", lib.loc="C:/Users/user/Documents/R/win-library/3.1")
install_github("ramnathv/rCharts@dev")
install_github("ramnathv/rCharts@dev")
require(devtools)
install_github('rCharts', 'ramnathv')
require(rCharts)
head(airquality)
dTable(airquality, sPaginationType = "full_numbers")
x <- y^2 + 3*g(z,2)
data()
oddcount <- function(x){
k <- 0
for (n in x) {
if (n %% 2 == 1) k <- k+1
}
return k
oddcount <- function(x){
k <- 0
for (n in x) {
if (n %% 2 == 1) k <- k+1
}
return (k)
}
oddcount(c(1,3,4,4,4,2))
list(kids=c("John","Amy"), age=c(10,12))
a<-list(kids=c("John","Amy"), age=c(10,12))
a
str(a)
mode(a)
class(a)
data.frame(a)
b<-data.frame(a)
str(b)
a$kids
b$kids
a$age
b$age
data.frame(rnorm(100),rnorm(100,2,4),rnorm(100,4,4))
d<-data.frame(rnorm(100),rnorm(100,2,4),rnorm(100,4,4))
head(d)
d<-data.frame(a=rnorm(100),b=rnorm(100,2,4),c=rnorm(100,4,4))
head(d)
lm(b~a)
lm(b~a,data=d)
e<-lm(b~a,data=d)
e
class(e)
mode(e)
str(e)
attributes(e)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
library(kernlab)
data(spam)
head(spam)
names(spam)
head(spam$your)
head(spam$your, spam$type)
head(spam[c("your", "type")])
plot(your~type, data=spam)
plot(density(spam$your[spam$type=="nonspam"]),
col="blue",main="",xlab="Frequency of 'your'")
lines(density(spam$your[spam$type=="spam"]),col="red")
prediction <- ifelse(spam$your > 0.5,"spam","nonspam")
table(prediction,spam$type)/length(spam$type)
R.home()
library("AER", lib.loc="C:/Program Files/R/R-3.1.0/library")
library("knitr", lib.loc="C:/Program Files/R/R-3.1.0/library")
install.packages("RMySQL", type = "source")
Sys.setenv(MYSQL_HOME = “D:\APM_Setup\Server\MySQL5")
Sys.setenv(MYSQL_HOME="D:\APM_Setup\Server\MySQL5")
Sys.setenv(MYSQL_HOME= "D:\APM_Setup\Server\MySQL5")
Sys.setenv(MYSQL_HOME= "D:\APM_Setup\Server\MySQL5")
getwd()
Sys.setenv(MYSQL_HOME= "D:/APM_Setup/Server/MySQL5")
Sys.getenv(“MYSQL_HOME”)
Sys.getenv("MYSQL_HOME")
install.packages("RMySQL", type = "source")
Sys.setenv(MYSQL_HOME= "D:/APM_Setup/Server/MySQL5/bin")
Sys.getenv("MYSQL_HOME")
install.packages("RMySQL", type = "source")
?sqldf
load("D:/github_clone/RepData_PeerAssessment1/d.RData")
data2 <- data
c <- which(is.na(data2$steps))
naLoc <- which(is.na(data2$steps))
for (i in naLoc){
data2$steps2[i] <- stepsDaily[data2$daily[i]]
}
data2 <- data
naLoc <- which(is.na(data2$steps))
for (i in naLoc){
data2$steps[i] <- stepsDaily[data2$daily[i]]
}
sum(is.na(data2$steps)) #0
sum(is.na(data$steps)) #0
qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000)
library(ggplot2)
qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000)
q <- qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000)
q + geom_vline(aes( intercept = mean(stepsDate, na.rm=T)
)
)
mean(stepsDate, na.rm=T)
stepsDate <-tapply(data$steps, data$date, sum)
q <- qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000)
q + geom_vline(aes( intercept = mean(stepsDate, na.rm=T)))
q + geom_vline(aes(mean(stepsDate, na.rm=T)))
q <- qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000)
stepsDate <-tapply(data$steps, data$date, sum)
q <- qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000)
q <- qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000)
q + geom_vline(aes(mean(stepsDate, na.rm=T)))
qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000)
stepsDate2<-tapply(data2$steps, data2$date, sum)
stepsDate2
g2<-qplot(stepsDate2, xlab="average steps per day", ylab="number of days", titile="after imputing missing data")
g2
g2<-qplot(stepsDate2, xlab="average steps per day", ylab="number of days", title="after imputing missing data")
g2
g2<-qplot(stepsDate2, xlab="average steps per day", ylab="number of days", title="after imputing missing data")
g2
g2<-qplot(stepsDate2, xlab="average steps per day", ylab="number of days", main="after imputing missing data")
g2
qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000, main="Ignoring missing data")
stepsDate2<-tapply(data2$steps, data2$date, sum)
stepsDate2
qplot(stepsDate2, xlab="average steps per day", ylab="number of days", binwidth=1000, main="after imputing missing data")
summary(stepsDate2)
mean(stepsDate2)
median(stepsDate2)
mean(stepsDate, na.rm=T)
median(stepsDate, na.rm=T)
?aggregate
tail(data$interval)
which(data$interval==2355)
qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000, main="Ignoring missing data")
qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1500, main="Ignoring missing data")
qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000, main="Ignoring missing data")
ggplot(stepsDate, aes(x = steps))+ geom_histogram(binwidth = 1500)
qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000, main="Ignoring missing data")
stepsDate <-tapply(data$steps, data$date, sum)
ggplot(stepsDate, aes(x = steps))+ geom_histogram(binwidth = 1500)
stepsDate <-tapply(data$steps, data$date, sum)
qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000, main="Ignoring missing data")
stepsDaily <- tapply(data$steps, data$interval, mean, na.rm=T)
qplot(1:288, stepsDaily, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps")
835/5
stepsDaily <- tapply(data$steps, data$interval, mean)
qplot(1:288, stepsDaily, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps")
stepsDaily <- tapply(data$steps, data$interval, mean, na.rm=T)
qplot(1:288, stepsDaily, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps")
stepsDaily[which(stepsDaily==max(stepsDaily, na.rm=T))]
835/12
835/60
288*5
2355/5
data$interval[1:288]
qplot(data$interval[1:288], stepsDaily, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps")
qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000, main="Ignoring missing data")
min <- strptime(data$interval, "%H:%M", tz="EST")
head(min)
min <- strptime(data$interval, "%H%M", tz="EST")
head(min)
?strptime
min <- strptime(data$interval, "%H %M", tz="EST")
min <- strptime(data$interval[121:226], "%H %M", tz="EST")
head(min)
data$interval[14]
data$interval[12]
data$interval[120]
data$interval[121]
data$interval[120]
min <- strptime(paste(0,data$interval[13:120]), "%H %M", tz="EST")
head(min)
min <- strptime(paste(0,data$interval[13:120]), "%H%M", tz="EST")
head(min)
data$interval[12]
min1 <- strptime(paste(00,data$interval[1:12]), "%H%M", tz="EST")
min2 <- strptime(paste(0,data$interval[13:120]), "%H%M", tz="EST")
min3 <- strptime(data$interval[121:288], "%H%M", tz="EST")
head(min1)
head(min2)
head(min3)
min2 <- strptime(paste(0,data$interval[13:120]), "%H %M", tz="EST")
head(min2)
paste(0,data$interval[13:120]
paste(0,data$interval[13:120])
paste(0,data$interval[13:120],"")
paste(0,data$interval[13:120],sep="")
min0 <- strptime(paste(000,data$interval[3:12],sep=""), "%H%M", tz="EST")
min1 <- strptime(paste(00,data$interval[3:12],sep=""), "%H%M", tz="EST")
min2 <- strptime(paste(0,data$interval[13:120],sep=""), "%H %M", tz="EST")
min3 <- strptime(data$interval[121:288], "%H%M", tz="EST")
min0 <- strptime(paste(000,data$interval[1:2],sep=""), "%H%M", tz="EST")
head(min0)
head(min2)
paste(000,data$interval[1:2],sep="")
min0 <- strptime(paste("000",data$interval[1:2],sep=""), "%H%M", tz="EST")
head(min0)
min0 <- strptime(paste("000",data$interval[1:2],sep=""), "%H%M", tz="EST")
min1 <- strptime(paste("00",data$interval[3:12],sep=""), "%H%M", tz="EST")
min2 <- strptime(paste("0",data$interval[13:120],sep=""), "%H %M", tz="EST")
min3 <- strptime(data$interval[121:288], "%H%M", tz="EST")
head(min0)
head(min1)
head(min2)
head(min3)
tail(min3)
min <- c(min0,min1,min2,min3)
min <- unlist(min)
min
min <- c(min0,min1,min2,min3)
data$min <- min
head(data,n=2)
head(min)
head(min0)
min <- sort(c(min0, min1, min2, min3))
head(min)
Sys.setenv("LANGUAGE"="En")
Sys.setlocale("LC_ALL", "English")
min0 <- strptime(paste("000",data$interval[1:2],sep=""), "%H%M", tz="EST")
min1 <- strptime(paste("00",data$interval[3:12],sep=""), "%H%M", tz="EST")
min2 <- strptime(paste("0",data$interval[13:120],sep=""), "%H %M", tz="EST")
min3 <- strptime(data$interval[121:288], "%H%M", tz="EST")
min <- sort(c(min0, min1, min2, min3))
head(min)
min <- c(min0, min1, min2, min3)
head(min)
min0 <- strptime(paste("000",data$interval[1:2],sep=""), "%H%M")
min1 <- strptime(paste("00",data$interval[3:12],sep=""), "%H%M")
min2 <- strptime(paste("0",data$interval[13:120],sep=""), "%H %M")
min3 <- strptime(data$interval[121:288], "%H%M")
min <- c(min0, min1, min2, min3)
head(min)
data$min <- min
class(data$min)
288*61
a <- rep(min, 288*61)
length(a)
data<-read.csv('./data/activity.csv')
getwd()
setwd("D:/github_clone/RepData_PeerAssessment1")
data<-read.csv('./data/activity.csv')
library(ggplot2)
sessionInfo()
Sys.setenv("LANGUAGE"="En")
Sys.setlocale("LC_ALL", "English")
stepsDate <-tapply(data$steps, data$date, sum)
qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000, main="Ignoring missing data")
mean(stepsDate, na.rm=T)
median(stepsDate, na.rm=T)
min0 <- strptime(paste("000",data$interval[1:2],sep=""), "%H%M")
min1 <- strptime(paste("00",data$interval[3:12],sep=""), "%H%M")
min2 <- strptime(paste("0",data$interval[13:120],sep=""), "%H %M")
min3 <- strptime(data$interval[121:288], "%H%M")
min <- c(min0, min1, min2, min3)
times(min)
require(xts)
times(min)
require(chron)
times(min)
head(min)
min0 <- as.Date(paste("000",data$interval[1:2],sep=""), "%H%M")
head(min0)
min0 <- strptime(paste("000",data$interval[1:2],sep=""), "%H%M")
min <- c(min0, min1, min2, min3)
head(min)
stepsDaily <- tapply(data$steps, data$interval, mean, na.rm=T)
qplot(x = min, y = stepsDaily, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps")
head(min)
require("scales")
dtPOSIXct <- as.POSIXct(min)
dtTime <- as.numeric(dtPOSIXct - trunc(dtPOSIXct, "days"))
class(dtTime) <- "POSIXct"
p <- qplot(dtTime) + xlab("Time slot") +
scale_x_datetime(labels = date_format("%S:00"))
print(p)
head(dtTime)
head(min)
min0 <- strptime(paste("000",data$interval[1:2],sep=""), "%H%M")
min1 <- strptime(paste("00",data$interval[3:12],sep=""), "%H%M")
min2 <- strptime(paste("0",data$interval[13:120],sep=""), "%H %M")
min3 <- strptime(data$interval[121:288], "%H%M")
min <- c(min0, min1, min2, min3)
head(min)
dtPOSIXct <- as.POSIXct(min)
head(dtPOSIXct)
dtTime <- as.numeric(dtPOSIXct - trunc(dtPOSIXct, "days"))
head(dtTime)
class(dtTime) <- "POSIXct"
head(dtTime)
dtPOSIXct <- as.POSIXct(min, tz="EST")
head(dtPOSIXct)
dtTime <- as.numeric(dtPOSIXct - trunc(dtPOSIXct, "days"))
head(dtTime)
class(dtTime) <- "POSIXct"
head(dtTime)
require("scales")
dtPOSIXct <- as.POSIXct(min, tz="KST")
head(dtPOSIXct)
dtPOSIXct <- as.POSIXct(min)
head(dtPOSIXct)
dtTime <- as.numeric(dtPOSIXct - trunc(dtPOSIXct, "days"))
head(dtTime)
class(dtTime) <- "POSIXct"
head(dtTime)
qplot(x = dtTime, y = stepsDaily, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps")
qplot(x = dtTime, y = stepsDaily, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps") +
scale_x_datetime(labels = date_format("%S:00"))
qplot(x = min, y = stepsDaily, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps") +
scale_x_datetime(labels = date_format("%S:00"))
qplot(x = min, y = stepsDaily, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps") +
scale_x_datetime(labels = date_format("%H:%M"))
require("scales")
stepsDaily <- tapply(data$steps, data$interval, mean, na.rm=T)
qplot(x = min, y = stepsDaily, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps") +
scale_x_datetime(labels = date_format("%H:%M"))
require("scales")
stepsDaily <- tapply(data$steps, data$interval, mean, na.rm=T)
qplot(x = min, y = stepsDaily, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps") +
scale_x_datetime(labels = date_format("%H:%M"))
stepsDaily[which(stepsDaily==max(stepsDaily, na.rm=T))]
sum(is.na(data$steps))
data2 <- data
naLoc <- which(is.na(data2$steps))
data2steps[289:300]
data2$steps[289:300]
data2$steps[289:380]
data2$steps[289:500]
data2$steps[289:800]
data2$steps[1:800]
df <- data.frame(data2$interval[1:288],stepsDaily)
data2$good<-data$interval
rm(data2$good)
data$df <- rep(1:288, 61)
for (i in naLoc){
data2$steps[i] <- stepsDaily[data$df[i]]
}
rm(data2)
rm(df)
data2 <- data
naLoc <- which(is.na(data$steps))
data$df <- rep(1:288, 61)
for (i in naLoc){
data2$steps[i] <- stepsDaily[data$df[i]]
}
sum(is.na(data2$steps)) #0
stepsDate2<-tapply(data2$steps, data2$date, sum)
stepsDate2
qplot(stepsDate2, xlab="average steps per day", ylab="number of days", binwidth=1000, main="after imputing missing data")
mean(stepsDate2)
median(stepsDate2)
?aggregate
qplot(stepsDate2, xlab="average steps per day", ylab="number of days", binwidth=1500, main="after imputing missing data")
qplot(stepsDate2, xlab="average steps per day", ylab="number of days", binwidth=1000, main="after imputing missing data")
stepsDate2<-tapply(data2$steps, data2$date, sum, na.rm=T)
stepsDate2
mean(stepsDate2)
median(stepsDate2)
stepsDaily <- tapply(data$steps, data$interval, mean, na.rm=F)
stepsDaily
stepsDaily <- tapply(data$steps, data$interval, mean, na.rm=T)
lm(steps~df, data)
summary(lm(steps~df, data))
qplot(lm(steps~df, data))
plot(lm(steps~df, data))
qplot(steps~df, data=data)
qplot(steps, df, data=data, method="lm")
qplot(df, steps, data=data, method="lm")
qplot(df, steps, data=data, method="lm", geom=c("smooth"))
qplot(df, steps, data=data, method="lm", geom=c("point",smooth"))
)
qplot(df, steps, data=data, method="lm", geom=c("point",smooth"))
geom_point()
qplot(df, steps, data=data, geom=c("point",smooth"))
qplot(df, steps, data=data, geom=c("point",smooth"))
+geom_smooth(method="lm")
lm(steps~df, data)
lm( y=steps, x=df, data)
lm( y=steps, x=df, data=data)
lm( y=data$steps, x=data$df, data=data)
lm( steps~df, data=data)
ggplot(data, aes(df, steps))+geom_point()
ggplot(data, aes(df, steps))+geom_point() + geom_smooth()
ggplot(data, aes(df, steps))+geom_point() + geom_smooth(method="lm")
summary(stepsDaily)
lm( steps~df, data=data)
summary(lm( steps~df, data=data))
summary(stepsDaily)
modelfit <- lm( steps~df, data=data)
summary(modelfit)
predict(modelfit, seq(1:288))
seq(1:288)
predict(modelfit, newdata=seq(1:288))
require(caret)
modelfit <- train( steps~df, data=data, method='glm')
summary(modelfit)
predict(modelfit, newdata=seq(1:288))
prediction <- predict(modelfit, newdata=data)
data$prediction <- predict(modelfit, newdata=data)
data$prediction[289]
data2 <- data[,c("steps","date","interval")]
for (i in naLoc){
data2$steps[i] <- data$prediction[i]
}
sum(is.na(data2$steps)) #0
stepsDate2<-tapply(data2$steps, data2$date, sum)
stepsDate2
qplot(stepsDate2, xlab="average steps per day", ylab="number of days", binwidth=1000, main="after imputing missing data")
mean(stepsDate2)
median(stepsDate2)
?train
modelfit <- train( steps~df, data=data, method='glm', na.action=na.omit)
summary(modelfit)
ggplot(data, aes(df, steps))+geom_point() + geom_smooth(method="lm")
data$prediction <- predict(modelfit, newdata=data)
data2 <- data[,c("steps","date","interval")]
naLoc <- which(is.na(data$steps))
for (i in naLoc){
data2$steps[i] <- data$prediction[i]
}
sum(is.na(data2$steps)) #0
stepsDate2<-tapply(data2$steps, data2$date, sum)
qplot(stepsDate2, xlab="average steps per day", ylab="number of days", binwidth=1000, main="after imputing missing data")
mean(stepsDate2)
median(stepsDate2)
qplot(stepsDate, xlab="average steps per day", ylab="number of days", binwidth=1000, main="Ignoring missing data")
weekDays <- weekdays(as.Date(data2$date))
data2$weekDays<- unlist(lapply(weekDays, function(x) {if (x == "Saturday" || x == "Sunday") "weekend" else "weekday"}))
qplot(x = min, y = stepsDaily, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps") +
scale_x_datetime(labels = date_format("%H:%M"))
sub1 <- subset(data2, weekDays==weekday)
sub1 <- subset(data2, weekDays=="weekday")
sub2 <- subset(data2, weekDays=="weekend")
wday <- tapply(sub1$steps, sub1$interval, mean)
wend <- tapply(sub2$steps, sub2$interval, mean)
data2$weekDays<- unlist(lapply(weekDays, function(x) {if (x == "Saturday" || x == "Sunday") TRUE else FALSE}))
sub1 <- subset(data2, weekDays==FALSE)
sub2 <- subset(data2, weekDays==TRUE)
data2$weekDays<- unlist(lapply(weekDays, function(x) {if (x == "Saturday" || x == "Sunday") FALSE else TRUE}))
sub1 <- subset(data2, weekDays==TRUE)
sub2 <- subset(data2, weekDays==FALSE)
wday <- tapply(sub1$steps, sub1$interval, mean)
wend <- tapply(sub2$steps, sub2$interval, mean)
qplot(x = min, y = wday, geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps") +
scale_x_datetime(labels = date_format("%H:%M"))
frame <- data.frame(x=rep(min,2), y=rbind(wday,wend),
z=c(rep("weekday",288),rep("weekend",288))
)
qplot(x = x, y = y, data=frame, facets=z~., geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps") +
scale_x_datetime(labels = date_format("%H:%M"))
head(frame)
head(wday)
frame <- data.frame(x=rep(min,2), y=rbind(as.numeric(wday),as.numeric(wend)),
z=c(rep("weekday",288),rep("weekend",288)))
qplot(x = x, y = y, data=frame, facets=z~., geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps") +
scale_x_datetime(labels = date_format("%H:%M"))
frame <- data.frame(x=rep(min,2), y=cbind(as.numeric(wday),as.numeric(wend)),
z=c(rep("weekday",288),rep("weekend",288)))
head(frame)
a<-c(wday,wend)
head(a)
frame <- data.frame(x=rep(min,2), y=c(wday,wend),
z=c(rep("weekday",288),rep("weekend",288)))
head(frame)
qplot(x = x, y = y, data=frame, facets=z~., geom=c("point", "line"), xlab="5-minute interval in 24hrs", ylab="average steps") +
scale_x_datetime(labels = date_format("%H:%M"))
